{"ast":null,"code":"var _jsxFileName = \"/Users/ehsan/Desktop/delete/book-management-app/src/componet/BookForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookForm = props => {\n  _s();\n\n  const [book, setBook] = useState({\n    bookname: props.book ? props.book.bookname : '',\n    author: props.book ? props.book.author : '',\n    quantity: props.book ? props.book.quantity : '',\n    price: props.book ? props.book.price : '',\n    date: props.book ? props.book.date : ''\n  });\n  const [errorMsg, setErrorMsg] = useState('');\n  const {\n    bookname,\n    author,\n    price,\n    quantity\n  } = book;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const values = [bookname, author, price, quantity];\n    let errorMsg = '';\n    const allFieldsFilled = values.every(field => {\n      const value = `${field}`.trim();\n      return value !== '' && value !== '0';\n    });\n\n    if (allFieldsFilled) {\n      const book = {\n        id: uuidv4(),\n        bookname,\n        author,\n        price,\n        quantity,\n        date: new Date()\n      };\n      props.handleOnSubmit(book);\n    } else {\n      errorMsg = 'Please fill out all the fields.';\n    }\n\n    setErrorMsg(errorMsg);\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case 'quantity':\n        if (value === '' || parseInt(value) === +value) {\n          setBook(prevState => ({ ...prevState,\n            [name]: value\n          }));\n        }\n\n        break;\n\n      case 'price':\n        if (value === '' || value.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n          setBook(prevState => ({ ...prevState,\n            [name]: value\n          }));\n        }\n\n        break;\n\n      default:\n        setBook(prevState => ({ ...prevState,\n          [name]: value\n        }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'main-form',\n    children: [errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: errorMsg,\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: 'name',\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Book Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: 'input-control',\n          type: 'text',\n          name: 'bookname',\n          value: book.bookname,\n          placeholder: 'Enter book name',\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"author\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Book Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"input-control\",\n          type: \"text\",\n          name: \"author\",\n          value: book.author,\n          placeholder: \"Enter name of author\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"quantity\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"input-control\",\n          type: \"number\",\n          name: \"quantity\",\n          value: book.quantity,\n          placeholder: \"Enter available quantity\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"price\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Book Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"input-control\",\n          type: \"text\",\n          name: \"price\",\n          value: book.price,\n          placeholder: \"Enter price of book\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: 'submit-btn',\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookForm, \"ZZgWKg457ZlYf9J97oYk5oLyHZI=\");\n\n_c = BookForm;\nexport default BookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"sources":["/Users/ehsan/Desktop/delete/book-management-app/src/componet/BookForm.js"],"names":["React","useState","Form","Button","BookForm","props","book","setBook","bookname","author","quantity","price","date","errorMsg","setErrorMsg","handleSubmit","event","preventDefault","values","allFieldsFilled","every","field","value","trim","id","uuidv4","Date","handleOnSubmit","handleInputChange","e","name","target","parseInt","prevState","match"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Form} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button'\nconst BookForm = (props) => {\n    const [book, setBook] = useState({\n        bookname: props.book ? props.book.bookname : '',\n        author: props.book ? props.book.author : '',\n        quantity: props.book ? props.book.quantity : '',\n        price: props.book ? props.book.price : '',\n        date: props.book ? props.book.date : ''\n    });\n\n\n\n    const [errorMsg, setErrorMsg] = useState('');\n    const { bookname, author, price, quantity } = book;\nconst handleSubmit = (event) => {\n    event.preventDefault()\n    const values = [bookname, author, price, quantity];\n    let errorMsg = '';\n    const allFieldsFilled = values.every((field) => {\n        const value = `${field}`.trim();\n        return value !== '' && value !== '0';\n    });\n\n    if (allFieldsFilled) {\n        const book = {\n            id: uuidv4(),\n            bookname,\n            author,\n            price,\n            quantity,\n            date: new Date()\n        };\n        props.handleOnSubmit(book);\n    } else {\n        errorMsg = 'Please fill out all the fields.';\n    }\n    setErrorMsg(errorMsg);\n\n}\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'quantity':\n                if (value === '' || parseInt(value) === +value) {\n                    setBook((prevState) => ({\n                        ...prevState,\n                        [name]: value\n                    }));\n                }\n                break;\n            case 'price':\n                if (value === '' || value.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n                    setBook((prevState) => ({\n                        ...prevState,\n                        [name]: value\n                    }));\n                }\n                break;\n            default:\n                setBook((prevState) => ({\n                    ...prevState,\n                    [name]: value\n                }));\n        }\n\n    }\n    return (\n        <div className={'main-form'}>\n            {errorMsg && <p className={errorMsg}>{errorMsg}</p>}\n            <Form onSubmit={handleSubmit}>\n                <Form.Group controlId={'name'}>\n                    <Form.Label>Book Name</Form.Label>\n                    <Form.Control className={'input-control'} type={'text'} name={'bookname'} value={book.bookname} placeholder={'Enter book name'} onChange={handleInputChange}/>\n                </Form.Group>\n                <Form.Group controlId=\"author\">\n                    <Form.Label>Book Author</Form.Label>\n                    <Form.Control\n                        className=\"input-control\"\n                        type=\"text\"\n                        name=\"author\"\n                        value={book.author}\n                        placeholder=\"Enter name of author\"\n                        onChange={handleInputChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"quantity\">\n                    <Form.Label>Quantity</Form.Label>\n                    <Form.Control\n                        className=\"input-control\"\n                        type=\"number\"\n                        name=\"quantity\"\n                        value={book.quantity}\n                        placeholder=\"Enter available quantity\"\n                        onChange={handleInputChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"price\">\n                    <Form.Label>Book Price</Form.Label>\n                    <Form.Control\n                        className=\"input-control\"\n                        type=\"text\"\n                        name=\"price\"\n                        value={book.price}\n                        placeholder=\"Enter price of book\"\n                        onChange={handleInputChange}\n                    />\n                </Form.Group>\n                <Button variant = \"primary\" type=\"submit\" className={'submit-btn'} > Submit</Button>\n\n\n            </Form>\n\n        </div>\n    );\n};\n\nexport default BookForm;\n\n"]},"metadata":{},"sourceType":"module"}