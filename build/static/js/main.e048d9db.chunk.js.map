{"version":3,"sources":["componet/Header.js","context/BooksContext.js","componet/BookForm.js","componet/AddBook.js","componet/Book.js","componet/BookList.js","componet/EditBook.js","hooks/useLocalStroge.js","App.js","index.js"],"names":["Header","className","to","activeClassName","exact","BooksContext","React","createContext","BookForm","props","useState","bookname","book","author","quantity","price","date","setBook","errorMsg","setErrorMsg","handleInputChange","e","target","name","value","parseInt","prevState","match","Form","onSubmit","event","preventDefault","every","field","trim","id","uuidv4","Date","handleOnSubmit","Group","controlId","Label","Control","type","placeholder","onChange","Button","variant","AddBook","history","useContext","books","setBooks","Fragment","push","Book","handleRemoveBook","useHistory","Card","style","width","Body","Title","toDateString","onClick","BookList","filter","_","isEmpty","map","EditBook","useParams","bookToEdit","find","filteredBooks","useLocalStroge","key","initialValue","localValue","localStorage","getItem","JSON","parse","error","setValue","useEffect","setItem","stringify","App","useLocalStorage","Provider","component","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e048d9db.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom'\nconst Header = () => {\n    return (\n        <header>\n        <h1>Book Management App</h1>\n    <hr />\n    <div className=\"links\">\n        <NavLink to=\"/\" className=\"link\" activeClassName=\"active\" exact>\n            Books List\n        </NavLink>\n        <NavLink to=\"/add\" className=\"link\" activeClassName=\"active\">\n            Add Book\n        </NavLink>\n    </div>\n        </header>\n    );\n};\n\nexport default Header\n","import React from 'react';\n\nconst BooksContext = React.createContext();\n\nexport default BooksContext;","import React, {useState} from 'react';\nimport {Form} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button'\nimport { v4 as uuidv4 } from 'uuid';\nconst BookForm = (props) => {\n    const [book, setBook] = useState({\n        bookname: props.book ? props.book.bookname : '',\n        author: props.book ? props.book.author : '',\n        quantity: props.book ? props.book.quantity : '',\n        price: props.book ? props.book.price : '',\n        date: props.book ? props.book.date : ''\n    });\n\n\n\n    const [errorMsg, setErrorMsg] = useState('');\n    const { bookname, author, price, quantity } = book;\nconst handleSubmit = (event) => {\n    event.preventDefault()\n    const values = [bookname, author, price, quantity];\n    let errorMsg = '';\n    const allFieldsFilled = values.every((field) => {\n        const value = `${field}`.trim();\n        return value !== '' && value !== '0';\n    });\n\n    if (allFieldsFilled) {\n        const book = {\n            id: uuidv4(),\n            bookname,\n            author,\n            price,\n            quantity,\n            date: new Date()\n        };\n        props.handleOnSubmit(book);\n    } else {\n        errorMsg = 'Please fill out all the fields.';\n    }\n    setErrorMsg(errorMsg);\n\n}\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'quantity':\n                if (value === '' || parseInt(value) === +value) {\n                    setBook((prevState) => ({\n                        ...prevState,\n                        [name]: value\n                    }));\n                }\n                break;\n            case 'price':\n                if (value === '' || value.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n                    setBook((prevState) => ({\n                        ...prevState,\n                        [name]: value\n                    }));\n                }\n                break;\n            default:\n                setBook((prevState) => ({\n                    ...prevState,\n                    [name]: value\n                }));\n        }\n\n    }\n    return (\n        <div className={'main-form'}>\n\n            <Form onSubmit={handleSubmit}>\n                <Form.Group controlId={'name'}>\n                    <Form.Label>Book Name</Form.Label>\n                    <Form.Control className={'input-control'} type={'text'} name={'bookname'} value={book.bookname} placeholder={'Enter book name'} onChange={handleInputChange}/>\n                </Form.Group>\n                <Form.Group controlId=\"author\">\n                    <Form.Label>Book Author</Form.Label>\n                    <Form.Control\n                        className=\"input-control\"\n                        type=\"text\"\n                        name=\"author\"\n                        value={book.author}\n                        placeholder=\"Enter name of author\"\n                        onChange={handleInputChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"quantity\">\n                    <Form.Label>Quantity</Form.Label>\n                    <Form.Control\n                        className=\"input-control\"\n                        type=\"number\"\n                        name=\"quantity\"\n                        value={book.quantity}\n                        placeholder=\"Enter available quantity\"\n                        onChange={handleInputChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"price\">\n                    <Form.Label>Book Price</Form.Label>\n                    <Form.Control\n                        className=\"input-control\"\n                        type=\"text\"\n                        name=\"price\"\n                        value={book.price}\n                        placeholder=\"Enter price of book\"\n                        onChange={handleInputChange}\n                    />\n                </Form.Group>\n                {errorMsg && <p className={errorMsg}>{errorMsg}</p>}\n                <Button variant = \"primary\" type=\"submit\" className={'submit-btn'} > Submit</Button>\n\n\n            </Form>\n\n        </div>\n    );\n};\n\nexport default BookForm;\n\n","import React, { useContext } from 'react';\nimport BookForm from './BookForm';\nimport BooksContext from '../context/BooksContext';\n\nconst AddBook = ({ history }) => {\n    const { books, setBooks } = useContext(BooksContext);\n\n    const handleOnSubmit = (book) => {\n        setBooks([book, ...books]);\n        history.push('/');\n    };\n\n    return (\n        <React.Fragment>\n            <BookForm handleOnSubmit={handleOnSubmit} />\n        </React.Fragment>\n    );\n};\n\nexport default AddBook;\n","import React from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nconst Book = ({\n                  id,\n                  bookname,\n                  author,\n                  price,\n                  quantity,\n                  date,\n                  handleRemoveBook\n              }) => {\n    const history = useHistory();\n\n    return (\n        <Card style={{ width: '18rem' }} className=\"book\">\n            <Card.Body>\n                <Card.Title className=\"book-title\">{bookname}</Card.Title>\n                <div className=\"book-details\">\n                    <div>Author: {author}</div>\n                    <div>Quantity: {quantity} </div>\n                    <div>Price: {price} </div>\n                    <div>Date: {new Date(date).toDateString()}</div>\n                </div>\n                <Button variant=\"primary\" onClick={() => history.push(`/edit/${id}`)}>\n                    Edit\n                </Button>{' '}\n                <Button variant=\"danger\" onClick={() => handleRemoveBook(id)}>\n                    Delete\n                </Button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Book;","import React, { useContext } from 'react';\nimport _ from 'lodash';\nimport Book from './Book';\nimport BooksContext from '../context/BooksContext';\n\nconst BookList = () => {\n    const { books, setBooks } = useContext(BooksContext);\n\n    const handleRemoveBook = (id) => {\n        setBooks(books.filter((book) => book.id !== id));\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"book-list\">\n                {!_.isEmpty(books) ? (\n                    books.map((book) => (\n                        <Book key={book.id} {...book} handleRemoveBook={handleRemoveBook} />\n                    ))\n                ) : (\n                    <p className=\"message\">No books available. Please add some books.</p>\n                )}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default BookList;","import React, { useContext } from 'react';\nimport BookForm from './BookForm';\nimport { useParams } from 'react-router-dom';\nimport BooksContext from '../context/BooksContext';\n\nconst EditBook = ({ history }) => {\n    const { books, setBooks } = useContext(BooksContext);\n    const { id } = useParams();\n    const bookToEdit = books.find((book) => book.id === id);\n\n    const handleOnSubmit = (book) => {\n        const filteredBooks = books.filter((book) => book.id !== id);\n        setBooks([book, ...filteredBooks]);\n        history.push('/');\n    };\n\n    return (\n        <div>\n            <BookForm book={bookToEdit} handleOnSubmit={handleOnSubmit} />\n        </div>\n    );\n};\n\nexport default EditBook;","import {useState,useEffect} from \"react\";\nconst useLocalStroge = (key, initialValue) => {\n    const [value, setValue] = useState(()=>{\n        try {\n            const localValue = localStorage.getItem(key)\n            return localValue ? JSON.parse(localValue): initialValue\n        }catch (error) {\n            return initialValue;\n        }\n    });\n    useEffect(()=>{\n        localStorage.setItem(key,JSON.stringify(value))\n    },[value,setValue])\n    return [value,setValue]\n}\n\n\nexport default useLocalStroge","import React from 'react';\nimport './App.css'\nimport {Route,Switch,Redirect} from \"react-router-dom\";\nimport Header from \"./componet/Header\";\nimport BooksContext from './context/BooksContext';\nimport AddBook from \"./componet/AddBook\";\nimport BookList from \"./componet/BookList\";\nimport EditBook from \"./componet/EditBook\";\nimport useLocalStorage from './hooks/useLocalStroge'\nfunction App() {\n    const [books, setBooks] = useLocalStorage('books', []);\n    return (\n        <div>\n            <Header />\n            <div className=\"main-content\">\n                <BooksContext.Provider value={{ books, setBooks }}>\n                    <Switch>\n                        <Route component={BookList} path=\"/\" exact={true} />\n                        <Route component={AddBook} path=\"/add\" />\n                        <Route component={EditBook} path=\"/edit/:id\" />\n                        <Route component={() => <Redirect to=\"/\" />} />\n                    </Switch>\n                </BooksContext.Provider>\n            </div>\n                <h2>thank you  FreeCodeCamp</h2>\n            <p>https://www.freecodecamp.org/news/react-crud-app-how-to-create-a-book-management-app-from-scratch/</p>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n<Router>\n  <App />\n</Router>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}